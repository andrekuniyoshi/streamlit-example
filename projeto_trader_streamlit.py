# -*- coding: utf-8 -*-
"""Projeto_Trader_Streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uCBNV1TvB287HBjhQpmJbb9vCm9WhHFO
"""

''' projeto do grupo MErcado Financeiro no Streamlit'''

import pandas as pd
import yfinance as yf
import streamlit as st
import datetime as dt
import plotly.graph_objects as go
from plotly.subplots import make_subplots


symbols = ['AAPL', 'AMZN']

ticker = st.sidebar.selectbox(
    'Escolha uma ação',
     symbols)

stock = yf.Ticker(ticker)

df = yf.download(tickers = ticker,
                 start = '2021-01-01',
                 end = '2022-04-19',
                 interval = '1h',
                 ajusted = True)

def criar_rsi(df):
    n = 20
    def rma(x, n, y0):
        a = (n-1) / n
        ak = a**np.arange(len(x)-1, -1, -1)
        return np.r_[np.full(n, np.nan), y0, np.cumsum(ak * x) / ak / n + y0 * a**np.arange(1, len(x)+1)]

    df['change'] = df['Adj Close'].diff()
    df['gain'] = df.change.mask(df.change < 0, 0.0)
    df['loss'] = -df.change.mask(df.change > 0, -0.0)
    df['avg_gain'] = rma(df.gain[n+1:].to_numpy(), n, np.nansum(df.gain.to_numpy()[:n+1])/n)
    df['avg_loss'] = rma(df.loss[n+1:].to_numpy(), n, np.nansum(df.loss.to_numpy()[:n+1])/n)
    df['rs'] = df.avg_gain / df.avg_loss
    df['rsi'] = 100 - (100 / (1 + df.rs))
    return df

df = criar_rsi(df)

st.dataframe(df)
